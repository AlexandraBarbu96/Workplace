@model Workplace_v2._2.Models.Skill
@using Workplace_v2._2.Models;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Your Skills";
    ApplicationDbContext db = new ApplicationDbContext();
    var Model = (ExperienceViewModel)HttpContext.Current.Session["experienceModel" + Session.SessionID];
    List<Skill> jobSkills = db.Jobs.Find(Model.JobId).JobSkills.Select(js => js.Skill).ToList();
    var countSkillsToAdd = new int[Model.skillsToAdd.Count()];
}
<div class="grid" id="content-grid">
    <dl>
        <dd>
            @Html.ActionLink("❮ Edit Personal Data", "Register", "Account", new { }, new { @class = "site-button" })
            @Html.ActionLink("Your Education ❯", "AddUserEducation", "Account", new { }, new { @class = "site-button" })
        </dd>
    </dl>
</div>
<div class="grid" id="content-grid">
    <dl>
        <dd>
            Skills to Add
        </dd>
        <dd>
            <ul>
                @foreach (var skill in jobSkills)
                {
                    for (var j = 0; j < Model.skillsToAdd.Count(); ++j)
                    {
                        if (skill.SkillId == Model.skillsToAdd[j].SkillId)
                        {
                            <li class="matching-ability">
                                @Html.DisplayFor(modelItem => skill.Name)
                                <a href="~/Account/AddSkill/?ids=@skill.SkillId" class="glyphicon glyphicon-plus-sign" data_toggle="tooltip" data_placement="bottom" title="Add Skill"></a>
                            </li>
                            countSkillsToAdd[j] = 1;
                            break;
                        }
                    }
                }
                @for (int i = 0; i < Model.skillsToAdd.Count(); ++i)
                {
                    if (countSkillsToAdd[i] != 1)
                    {
                        <li class="ability">
                            @Html.DisplayFor(modelItem => Model.skillsToAdd[i].Name)
                            <a href="~/Account/AddSkill/?ids=@Model.skillsToAdd[i].SkillId" class="glyphicon glyphicon-plus-sign" data_toggle="tooltip" data_placement="bottom" title="Add Skill"></a>
                        </li>
                    }
                }
            </ul>
        </dd>
    </dl>
    <dl>
        <dd>
            Added Skills
        </dd>
        <dd>
            <ul>
                @foreach (var skill in  Model.addedSkills)
                {
                    var found = false;
                    foreach (var jobSkill in jobSkills)
                    {
                        if (skill.SkillId == jobSkill.SkillId)
                        {
                            found = true;
                            <li class="matching-ability">
                                @Html.DisplayFor(modelItem => skill.Name)
                                <a href="~/Account/RemoveSkill/?ids=@skill.SkillId" class="glyphicon glyphicon-remove-circle" data_toggle="tooltip" data_placement="bottom" title="Remove Skill"></a>
                            </li>
                        }
                    }
                    if (!found)
                    {
                        <li class="ability">
                            @Html.DisplayFor(modelItem => skill.Name)
                            <a href="~/Account/RemoveSkill/?ids=@skill.SkillId" class="glyphicon glyphicon-remove-circle" data_toggle="tooltip" data_placement="bottom" title="Remove Skill"></a>
                        </li>
                    }

                }
                @for (var i = 0; i < Model.newSkills.Count(); ++i)
                {
                    <li class="personal-ability">
                        @Html.DisplayFor(modelItem => Model.newSkills[i].Name)
                        <a href="~/Account/RemoveNewSkill/?ns=@i" class="glyphicon glyphicon-remove-circle" data_toggle="tooltip" data_placement="bottom" title="Remove Skill"></a>
                    </li>
                }
            </ul>
        </dd>
    </dl>
</div>
<div class="grid" id="content-grid">
    <dl>
        <dd>
            @Html.DisplayName("Other:")
            @using (Html.BeginForm("AddNewSkill", "Account", FormMethod.Post, new { id = "newSkillForm", @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @style = "display:inline-block" })

                @Html.AntiForgeryToken()
                <a href="javascript:document.getElementById('newSkillForm').submit()" title="Add new skill" class="site-button"><span class="glyphicon glyphicon-plus"></span></a>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </dd>
    </dl>
</div>
<div id="legend-div">
    <dl>
        <dd>
            <h4>Legend</h4>
            <ul>
                <li class="dot" id="matching-dot"></li>
                <li>required/preferred skills</li>
                <li class="dot" id="personal-dot"></li>
                <li>extra skills</li>
                <li class="dot"></li>
                <li>unrequired skills</li>
            </ul>
        </dd>
    </dl>
</div>

<style>
    @@media(max-width:1200px) {
        #content-grid:nth-child(2) {
            width: 100%;
            grid-template-columns: 1fr;
        }

            #content-grid:nth-child(2) > dl:first-child {
                margin-left: 0px !important;
            }
    }

    #content-grid {
        margin: 2vw;
        grid-gap: 2rem;
    }

        #content-grid:first-child,
        #content-grid:nth-child(3) {
            width: 100%;
            grid-template-columns: 1fr;
        }

        #content-grid:nth-child(2) > dl:first-child {
            margin-left: 8%;
        }

    .site-button {
        background-color: #f5f5f5;
        color: #838383;
    }

        .site-button:hover {
            background-color: #f5f5f5;
            color: #0b91d4;
        }

    #content-grid > dl > dd:first-child > a:nth-child(2) {
        float: right;
    }

    #content-grid > dl > dd > ul > li > a {
        margin-left: 5px;
        color: #ffffff;
    }

        #content-grid > dl > dd > ul > li > a:hover {
            text-decoration: none;
        }

    .ability, .matching-ability, .personal-ability {
        padding: 3px;
        display: inline-block;
        font-size: medium;
        margin: 5px;
        margin-right: 0;
        border-radius: 5px;
        border: 1px;
        color: #ffffff;
    }

    #legend-div {
        margin: 4vw;
    }

        #legend-div > dl > dd > ul > li:nth-child(2n) {
            margin-right: 10%;
        }

        #legend-div > dl > dd > ul > li{
            display:inline-block;
        }

</style>
@*
    <div>
        @Html.ActionLink("❮ Edit Personal Data", "Register", "Account", new { }, new { @class = "btn btn-default", @style = "display:inline-block" })
        @Html.ActionLink("Education ❯", "AddUserEducation", "Account", new { }, new { @class = "btn btn-default", @style = "display:inline-block" })
    </div>
    <div>
        <table>
            <tr>
                <th></th>
                <th></th>
            </tr>
            @foreach (var item in Model.skillsToAdd)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Add", "AddSkill", new { ids = item.SkillId }, new { @class = "btn btn-default", @style = "border:none" })
                    </td>
                </tr>
            }
        </table>
        <table>
            <tr>
                <th class="col-sm-4"></th>
                <th class="col-sm-4"></th>
            </tr>
            @foreach (var item in Model.addedSkills)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        <a href="~/Account/RemoveSkill/?ids=@item.SkillId" class="glyphicon glyphicon-remove-circle" data_toggle="tooltip" data_placement="bottom" title="Remove"></a>
                    </td>
                </tr>
            }
            @for (var i = 0; i < Model.newSkills.Count(); ++i)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => Model.newSkills[i].Name)
                    </td>
                    <td>
                        <a href="~/Account/RemoveNewSkill/?ns=@i" class="glyphicon glyphicon-remove-circle" data_toggle="tooltip" data_placement="bottom" title="Remove"></a>
                    </td>
                </tr>
            }
        </table>
    </div>

    <div style="clear:left;position:relative;">
        @Html.DisplayName("Other:")
        @using (Html.BeginForm("AddNewSkill", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @style = "display:inline-block" })

            @Html.AntiForgeryToken()
            <input type="submit" value="Add" class="btn btn-default" />
            <div class="row">
                <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    </div>

    <div style="clear:left;position:relative;margin-top:2.5rem">
        @Html.ActionLink("Cancel", "Index", "Home", new { }, new { @class = "btn btn-default" })
    </div>
    <style>
        table, td, th {
            border: 0.1rem solid #ddd;
            text-align: left;
        }

        table {
            float: left;
            border-collapse: collapse;
            width: auto;
        }

        th, td {
            padding: 2rem;
        }
    </style>
*@